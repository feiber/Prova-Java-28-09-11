import static org.junit.Assert.*;

import org.junit.Test;

public class EstatiscasSimplesTest {
	@Test
	public void deveCalcularValorMinimoEntreDoisValores() {
		double valoresDeEntrada[] =  {9,5};
		double valorMinimoCalculado = EstatisticasSimples.calculaValorMinimo(valoresDeEntrada);
		assertEquals(5, valorMinimoCalculado, 0);
	}

	@Test
	public void deveCalcularValorMaximoEntreDoisValores() {
		double valoresDeEntrada[] =  {9,5};
		double valorMinimoCalculado = EstatisticasSimples.calculaValorMaximo(valoresDeEntrada);
		assertEquals(9, valorMinimoCalculado, 0);
	}

	@Test
	public void deveCalcularQuantidadeDeValores() {
		double valoresDeEntrada[] =  {9,5};
		int quantidadeDeValores = EstatisticasSimples.calculaQuantidade(valoresDeEntrada);
		assertEquals(2, quantidadeDeValores);
	}

	@Test
	public void deveCalcularMediaDeDoisValores() {
		double valoresDeEntrada[] =  {9,5};
		double mediaDeValores = EstatisticasSimples.calculaMedia(valoresDeEntrada);
		assertEquals(7, mediaDeValores, 0);
	}

	@Test
	public void deveEfetuarTodosCalculosParaDoisValores() {
		double valoresDeEntrada[] =  {9,5};
		double valoresDeSaida[] = EstatisticasSimples.calcula(valoresDeEntrada);
		assertArrayEquals(new double[] {5,9,2,7}, valoresDeSaida, 0);		
	}

}
//------------------------------------------------------------------------------------------------


public class EstatisticasSimples {

	public static double calculaValorMinimo(double[] valoresDeEntrada) {
		
		
		
		if(valoresDeEntrada[0]>valoresDeEntrada[1] ){
			
		}
		
		
		return valoresDeEntrada[1];
	
	}

	public static double calculaValorMaximo(double[] valoresDeEntrada) {
		
		
		
		if(valoresDeEntrada[0]>valoresDeEntrada[1] ){
			
		}
		
		
		return valoresDeEntrada[0];
	}

	public static int calculaQuantidade(double[] valoresDeEntrada) {
		
		
		
		int i = valoresDeEntrada.length;
		
		
		
		return i;
	}

	public static double calculaMedia(double[] valoresDeEntrada) {
		
		
		
		int num = 0;
		for (int i = 0; i < valoresDeEntrada.length; i++) {
			num += valoresDeEntrada[i];
		}
		double media = num/valoresDeEntrada.length;
		
		return media;
		
		
	}

	public static double[] calcula(double[] valoresDeEntrada) {
		double valores[] = new double[4];	
		valores[0]=calculaValorMinimo(valoresDeEntrada);
		valores[1]=calculaValorMaximo(valoresDeEntrada);
		valores[2]=calculaQuantidade(valoresDeEntrada);
		valores[3]=calculaMedia(valoresDeEntrada);
				 
	return valores;
	}

}
